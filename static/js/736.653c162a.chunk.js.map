{"version":3,"file":"static/js/736.653c162a.chunk.js","mappings":"sSAEaA,EAAaC,EAAAA,GAAAA,GAAH,4JASVC,EAAUD,EAAAA,GAAAA,GAAH,mJAUPE,EAAQF,EAAAA,GAAAA,IAAH,0JAULG,EAAOH,EAAAA,GAAAA,GAAH,gKASJI,EAAYJ,EAAAA,GAAAA,EAAH,gHAOTK,EAAYL,EAAAA,GAAAA,EAAH,mE,SCatB,EA9Ca,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE2BC,EAAAA,EAAAA,IAASN,GAFpC,OAEUO,EAFV,OAGUC,EAAYD,EAASE,KAAKC,KAChCN,EAASI,GAJb,gDAMIG,QAAQC,IAAR,MANJ,0DAJc,sBACTZ,GADS,mCAada,EACD,GAAE,IAEqB,IAAjBV,EAAMW,QACX,SAACf,EAAD,wEAIA,SAACN,EAAD,UACGU,EAAMY,KAAI,SAAAL,GACT,OACE,UAACf,EAAD,YACE,SAACC,EAAD,CACEoB,IACEN,EAAKO,aAAL,yCACsCP,EAAKO,cACvCC,EAENC,IAAKT,EAAKU,QAEZ,SAACvB,EAAD,UAAOa,EAAKU,QACZ,UAACtB,EAAD,yBAAuBY,EAAKW,eAVhBX,EAAKY,UAatB,KAGN,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastsWrapp = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  justify-content: center;\n  flex-wrap: wrap;\n  border-top: solid 1px #e50914;\n`;\n\nexport const CastBox = styled.li`\n  width: 100px;\n  height: 250px;\n\n  @media screen and (min-width: 780px) {\n    width: 150px;\n    height: 350px;\n  }\n`;\n\nexport const Photo = styled.img`\n  height: 150px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 780px) {\n    width: 150px;\n    height: 225px;\n  }\n`;\n\nexport const Name = styled.h3`\n  font-size: 10px;\n  text-align: center;\n  margin-bottom: 10px;\n  @media screen and (min-width: 780px) {\n    font-size: 15px;\n  }\n`;\n\nexport const Character = styled.p`\n  font-size: 8px;\n  @media screen and (min-width: 780px) {\n    font-size: 15px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  text-align: center;\n  font-size: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport imageNotFound from '../../img/imageNotFound.jpg';\nimport { getCasts } from '../../services/takeApi';\nimport {\n  CastBox,\n  CastsWrapp,\n  Character,\n  ErrorText,\n  Name,\n  Photo,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getCasts(movieId);\n        const castsData = response.data.cast;\n        setCasts(castsData);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return casts.length === 0 ? (\n    <ErrorText>\n      We don`t have any information about casts for this movie\n    </ErrorText>\n  ) : (\n    <CastsWrapp>\n      {casts.map(cast => {\n        return (\n          <CastBox key={cast.credit_id}>\n            <Photo\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                  : imageNotFound\n              }\n              alt={cast.name}\n            />\n            <Name>{cast.name}</Name>\n            <Character>Character: {cast.character}</Character>\n          </CastBox>\n        );\n      })}\n    </CastsWrapp>\n  );\n};\n\nexport default Cast;\n"],"names":["CastsWrapp","styled","CastBox","Photo","Name","Character","ErrorText","movieId","useParams","useState","casts","setCasts","useEffect","getCasts","response","castsData","data","cast","console","log","fetchData","length","map","src","profile_path","imageNotFound","alt","name","character","credit_id"],"sourceRoot":""}