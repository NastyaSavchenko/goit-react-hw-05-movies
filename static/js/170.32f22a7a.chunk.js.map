{"version":3,"file":"static/js/170.32f22a7a.chunk.js","mappings":"8UAGaA,EAAaC,EAAAA,GAAAA,KAAH,6EAKVC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gVAiBVG,EAAYH,EAAAA,GAAAA,IAAH,uIAQTI,EAAMJ,EAAAA,GAAAA,IAAH,iSAgBHK,EAAWL,EAAAA,GAAAA,EAAH,qEAKRM,EAAQN,EAAAA,GAAAA,GAAH,gDAILO,EAAYP,EAAAA,GAAAA,GAAH,gDAITQ,EAAOR,EAAAA,GAAAA,EAAH,gDAIJS,EAAQT,EAAAA,GAAAA,IAAH,wKASLU,EAAeV,EAAAA,GAAAA,GAAH,4GAOZW,GAAWX,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6M,SCsBrB,EAnFqB,WACnB,IAAQY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE2BC,EAAAA,EAAAA,IAAiBV,GAF5C,OAEUW,EAFV,OAGUR,EAAYQ,EAASC,KAC3BR,EAAaD,GACbG,EAAUH,EAAUE,QALxB,gDAOIQ,QAAQC,IAAR,MAPJ,0DAJc,sBACTd,GADS,mCAcde,EACD,GAAE,IAEH,IAAQC,EACNb,EADMa,eAAgBC,EACtBd,EADsBc,aAAcC,EACpCf,EADoCe,aAAcC,EAClDhB,EADkDgB,SAAUC,EAC5DjB,EAD4DiB,YAE9D,OACE,+BACE,UAACjC,EAAD,YACE,UAACE,EAAD,CACEgC,GAAI,CACFC,SAA2C,MAAjCf,EAASgB,MAAMC,KAAKF,SAAmB,IAAvC,WAFd,WAKE,SAAC,MAAD,IALF,aAQCnB,IACC,UAACZ,EAAD,YACE,SAACC,EAAD,CACEiC,IACEL,EAAW,yCAC2BA,GAClCM,EAENC,IAAKX,KAEP,UAACnB,EAAD,YACE,UAACH,EAAD,WACGsB,GACD,iCAAS,IAAIY,KAAKX,GAAcY,cAAhC,WAEF,UAACjC,EAAD,2BACc,4BAAkC,GAA3BkC,KAAKC,MAAMb,GAAlB,WAEd,SAACvB,EAAD,wBACA,SAACF,EAAD,UAAW0B,IACQ,IAAlBd,EAAO2B,SAAgB,SAACrC,EAAD,qBACvBU,EAAO4B,KAAI,SAAAC,GACV,OAAO,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAME,GACzB,WAIP,UAACtC,EAAD,YACE,yBACE,SAACC,EAAD,CAAUsB,GAAI,OAAQE,MAAOhB,EAASgB,MAAOa,GAAIpC,EAAjD,qBAIF,yBACE,SAACD,EAAD,CAAUsB,GAAI,UAAWE,MAAOhB,EAASgB,MAAzC,2BAKJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MainSlyels = styled.main`\n  min-height: calc(100vh - 64px);\n  padding: 20px;\n`;\n\nexport const LinkStyles = styled(Link)`\n  width: 100px;\n  padding: 8px 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  border: solid 1px #e50914;\n  border-radius: 4px;\n  transition: color 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 13px 3px #e50914;\n  }\n`;\n\nexport const InfoWrapp = styled.div`\n  margin-bottom: 30px;\n  @media screen and (min-width: 780px) {\n    display: flex;\n    padding: 20px;\n  }\n`;\n\nexport const Img = styled.img`\n  max-width: 300px;\n  width: 100%;\n  border: solid 1px #e50914;\n\n  @media screen and (min-width: 780px) {\n    margin-right: 20px;\n  }\n\n  @media screen and (max-width: 779px) {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Overview = styled.p`\n  max-width: 700px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Wrapp = styled.div`\n  @media screen and (max-width: 779px) {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 400px;\n    text-align: center;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const InfoLink = styled(Link)`\n  padding: 8px 5px;\n  text-align: center;\n  border: solid 1px #e50914;\n  width: 100px;\n  display: block;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 13px 3px #e50914;\n  }\n`;\n","import { Loader } from 'components';\nimport { Suspense, useEffect, useState } from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport notAvailable from '../../img/notAvailable.png';\nimport { getMoviesDetails } from '../../services/takeApi';\nimport {\n  Img,\n  InfoLink,\n  InfoTitle,\n  InfoWrapp,\n  LinkStyles,\n  MainSlyels,\n  MoreInfoList,\n  Overview,\n  Text,\n  Title,\n  Wrapp,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setmovieInfo] = useState({});\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const response = await getMoviesDetails(movieId);\n        const movieInfo = response.data;\n        setmovieInfo(movieInfo);\n        setGenres(movieInfo.genres);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const { original_title, release_date, vote_average, overview, poster_path } =\n    movieInfo;\n  return (\n    <>\n      <MainSlyels>\n        <LinkStyles\n          to={{\n            pathname: location.state.from.pathname === '/' ? '/' : `/movies`,\n          }}\n        >\n          <BsArrowLeft />\n          Go back\n        </LinkStyles>\n        {movieInfo && (\n          <InfoWrapp>\n            <Img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : notAvailable\n              }\n              alt={original_title}\n            />\n            <Wrapp>\n              <Title>\n                {original_title}\n                <span> ({new Date(release_date).getFullYear()})</span>\n              </Title>\n              <Text>\n                User Score: <span>{Math.round(vote_average) * 10}%</span>\n              </Text>\n              <InfoTitle>Overview</InfoTitle>\n              <Overview>{overview}</Overview>\n              {genres.length !== 0 && <InfoTitle>Genres</InfoTitle>}\n              {genres.map(genre => {\n                return <span key={genre.id}>{genre.name} </span>;\n              })}\n            </Wrapp>\n          </InfoWrapp>\n        )}\n        <MoreInfoList>\n          <li>\n            <InfoLink to={'cast'} state={location.state} id={movieId}>\n              Cast\n            </InfoLink>\n          </li>\n          <li>\n            <InfoLink to={'reviews'} state={location.state}>\n              Reviews\n            </InfoLink>\n          </li>\n        </MoreInfoList>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </MainSlyels>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MainSlyels","styled","LinkStyles","Link","InfoWrapp","Img","Overview","Title","InfoTitle","Text","Wrapp","MoreInfoList","InfoLink","movieId","useParams","useState","movieInfo","setmovieInfo","genres","setGenres","location","useLocation","useEffect","getMoviesDetails","response","data","console","log","fetchData","original_title","release_date","vote_average","overview","poster_path","to","pathname","state","from","src","notAvailable","alt","Date","getFullYear","Math","round","length","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}